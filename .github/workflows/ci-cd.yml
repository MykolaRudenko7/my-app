name: Deploy Next.js app

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    test:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [20]
                os: [ubuntu-latest]

        steps:
            - uses: actions/checkout@v4

            - name: Setup Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}

            - uses: actions/cache@v3
              with:
                  path: |
                      ~/.npm
                      ${{ github.workspace }}/.next/cache
                  key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
                  restore-keys: |
                      ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

            - name: Install dependencies
              run: npm ci

            - name: 'Create env file'
              run: |
                  echo "${{ secrets.ENV_LOCAL }}" > .env.local

            - name: Run code quality checks
              run: |
                  npm run prettier
                  npm run stylelint
                  npm run lint:fix

            - name: Build Next.js app
              run: npm run build

            - name: Upload artifacts
              uses: actions/upload-artifact@v3
              with:
                  name: build
                  path: .next

    deploy:
        needs: test
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-node@v4
              with:
                  node-version: 20

            - uses: actions/download-artifact@v3
              with:
                  name: build

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Build and push Docker image
              run: |
                  docker build -t mykolarud/sentiment_analysis:latest .
                  docker push mykolarud/sentiment_analysis:latest

            - name: Deploy Docker Image
              env:
                  deploy_url: ${{ secrets.RENDER_DEPLOY_DOCKER_HOOK_URL }}
              run: |
                  curl "$deploy_url"
